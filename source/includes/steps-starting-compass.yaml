title: Enter connection information.
level: 4
ref: compass-enter-connection-info
content: |

    Once Compass is :doc:`running </install>`, an
    initial connection dialog appears:

    .. figure:: /images/compass/connect-to-host.png
      :figwidth: 626px

    .. list-table::
       :header-rows: 1
       :widths: 40 60
       
       * - Field
         - Description

       * - Hostname

         - The hostname of the machine where the ``mongod`` instance is
           running.

       * - Port
         - The port on which ``mongod`` is running.

       * - Authentication

         - The authentication to use if the ``mongod``
           instance requires authentication.

           Supported authentication mechanisms are:

           - MongoDB-CR
           - SCRAM-SHA-1
           - Kerberos
           - LDAP

           For MongoDB-CR and SCRAM-SHA-1, select :guilabel:`Username /
           Password`.

       * - SSL
       
         - Select whether Compass should connect to the target host via
           SSL or not. For TLS/SSL connections to Atlas, select
           :guilabel:`Use System CA/Atlas Deployment`.

       * - SSH tunnel
       
         - Select whether Compass should connect to a MongoDB cluster
           via SSH tunnel, which automatically start when you connect
           to MongoDB, and stop when you disconnect.

           .. figure:: /images/compass/ssh-tunnel-support.png
             :figwidth: 579px

           Enter information for the SSH tunnel.

           .. tip:: Enter the bastion (jumpbox) hostname for the :guilabel:`SSH Hostname`.

           To use an SSH tunnel through a bastion host, the ssh
           configuration on the bastion host must allow TCP port
           forwarding; i.e., the ``AllowTcpForwarding`` directive in
           the :file:`/etc/ssh/sshd_config` file is set to ``yes``. If
           ``AllowTcpForwarding`` is not set to ``yes``, set to ``yes``
           and restart the ssh daemon (``sudo service sshd restart``).

           Instead of creating the SSH tunnel through the Compass UI, you can also create
           the tunnel manually from the command line:

           .. code-block:: sh

              ssh -L <local_port>:<mongodb_hostname>:<mongodb_port> <user>@<bastion_hostname> -fN

           .. example::

              If you have a :program:`mongod` instance running on
              (internal) ``hostname-a.com`` on port 27017, and the
              bastion host is ``hostname-b.com`` with user name
              ``ec2-user``, you can build the tunnel via

              .. code-block:: sh

                 ssh -L 27000:hostname-a.com:27017 ec2-user@hostname-b.com -fN

              Using this SSH tunnel, you can now connect Compass (or
              the :program:`mongo` shell) to ``localhost:27000`` to
              connect to the :program:`mongod` instance running on
              ``hostname-a.com``.

       * - Favorite Name 
       
         - *Optional*. A name for the connection. When you use Compass in the
           future, previous connections appear in the left pane of this
           window under Favorites.
---
title: Connect.
level: 4
ref: compass-connect
content: |
   When the connection information is complete, click the Connect
   button to launch the main Compass window.
...
